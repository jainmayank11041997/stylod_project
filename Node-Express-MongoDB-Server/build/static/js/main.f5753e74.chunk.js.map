{"version":3,"sources":["components/general/carasoule.js","redux/redux_const.js","components/general/modal_component.js","redux/action_creator.js","components/landing/landing_component.js","components/general/general_components.js","components/home/home_component.js","components/profile/profile_component.js","redux/reducer.js","redux/configure.store.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faLessThan","faUserShield","items","src","altText","caption","buttonDetails","buttonType","iconType","GeneralCarousel","props","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","CarouselItem","onExiting","onExited","className","Button","size","color","icon","alt","height","width","position","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","ACTIONS","Component","LOGIN","CREATE_USER","LIST_HACKERS","LoginUser","data","fetch","method","headers","body","JSON","stringify","then","res","json","localStorage","setItem","token","ConfigureStore","dispatch","type","catch","err","console","log","CreateUser","ListHackers","getItem","payload","faCheckSquare","faCoffee","faSignInAlt","faUserPlus","faHatCowboySide","faUser","faSignOutAlt","Landing","toggleTab","tab","state","activeTab","setState","JSONdata","poductData","open","login_email","login_password","name","email","password","confirm_password","location","password_match","invalid_form","invalid_email","onLogin","bind","toggle","openModal","onSignup","checkPassword","validateForm","onLogout","this","login","user_created","history","push","test","value","field","sign_up","id","username","Jumbotron","fluid","Container","Row","Col","onClick","active","on","outline","Modal","isOpen","ModalBody","Nav","tabs","NavItem","NavLink","classnames","TabContent","TabPane","tabId","Form","inline","Card","FormGroup","lg","Label","for","Input","onChange","e","target","placeholder","sm","invalid","required","FormFeedback","ModalFooter","withRouter","connect","state_reducer","signup","GeneralTable","dataSet","Array","Math","ceil","random","a","i","pageSize","pagesCount","viewProfile","currentPage","getNext","index","preventDefault","pathname","userId","Fragment","Pagination","aria-label","PaginationItem","disabled","PaginationLink","handleClick","href","page","Table","slice","scope","comptetive_percentile","cplusplus","java","python","javascript","React","hackers_list","label","Home","graph_d","newRef","createRef","da","graph_data","parseInt","CardBody","CardTitle","tag","CardSubtitle","style","pr","options","scales","yAxes","ticks","callback","labels","ProfileComponent","dat","user","datasets","backgroundColor","initialState","landing","home","profile_component","TestReducer","action","Object","assign","Store","createStore","combineReducers","Obje","applyMiddleware","thunk","App","exact","path","component","Profile","Boolean","window","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5753e74.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n\n  Button,\n  \n  \n} from 'reactstrap';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {faLessThan, faSignInAlt, faUserShield} from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faLessThan,faUserShield);\n\nconst items = [\n  {\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22150.921875%22%20y%3D%22218.3%22%3ECompare%20Best%20Here!%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n    altText: 'Compare Best Here!',\n    caption: 'Compare best hackers, Compare there skill sets at ONE stop!',\n    buttonDetails : \"Compare best here!\",\n    buttonType: 'warning',\n    iconType: 'less-than'\n  },\n  {\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3EGet%20you%20IN%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n    altText: 'Register Yourselves',\n    caption: 'Register Yourselves to find best in market!',\n\n    buttonDetails : \"Register Youself! \",\n    buttonType: 'primary',\n    iconType: 'sign-in-alt'\n\n  },\n  {\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22180.3203125%22%20y%3D%22218.3%22%3EVerified%20Hackers%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n    altText: '100+ verified prominant hackers!',\n    caption: '100+ verified prominent hackers, with large skill sets!',\n    buttonDetails : \"Get Verified!\",\n    buttonType: 'info',\n    iconType: 'user-shield'\n  }\n];\n\nconst GeneralCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n        \n      >\n          <div className=\"carousel_button_wrapper\">\n                  <Button size=\"lg\" color={item.buttonType} className=\"carousel_button\"  >{item.buttonDetails} <FontAwesomeIcon icon={item.iconType} /></Button>\n                  </div>\n        <img src={item.src} alt={item.altText} height=\"100%\" width=\"100%\" position=\"absolute\"/>\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n\n       \n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n\nexport default GeneralCarousel;\n","const  ACTIONS = {\n    LOGIN:\"LOGIN\",\n    CREATE_USER:\"CREATE_USER\",\n    LIST_HACKERS:\"LIST_HACKERS\"\n}\n\nexport default ACTIONS;","import React, { Component, useState } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, Label, Input, FormGroup, Form } from 'reactstrap';\n\nclass ModalFocusAfterClose extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: true\n\n        }\n\n        this.toggle = this.toggle.bind(this)\n\n    }\n\n    toggle() {\n        this.setState({\n            open: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n\n                <Modal isOpen={this.state.open}>\n                    <ModalBody>\n                        Observe the \"Open\" button. It will be focused after close when \"returnFocusAfterClose\" is true and will not be focused if \"returnFocusAfterClose\" is false.\n                </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>Close</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ModalFocusAfterClose;","import ACTIONS from \"./redux_const\"\nimport ConfigureStore from './configure.store.js';\n\n\n\n\nexport const login_user = (data) => {\n\n    return {\n        type: ACTIONS.LOGIN\n    }\n}\n\n\nexport const create_user = (data) => {\n\n    return {\n        type: ACTIONS.CREATE_USER\n    }\n\n}\n\nexport const list_hackers = (payload) => {\n\n    return {\n        type: ACTIONS.LIST_HACKERS,\n        payload: payload\n    }\n\n}\n\n\nexport const LoginUser = (data) => {\n  \n    return () => {\n        fetch(\"http://localhost:3002/users/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then((res) => res.json())\n            .then(res => {\n                localStorage.setItem(\"hacker_token\", res.token);\n                ConfigureStore.dispatch(login_user())\n            })\n            .catch((err) => console.log(err))\n    }\n}\n\n\nexport const CreateUser = (data) => {\n    \n    return () => {\n        fetch(\"http://localhost:3002/users/signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then((res) => res.json())\n            .then(res => {\n                ConfigureStore.dispatch(create_user())\n            })\n            .catch((err) => console.log(err))\n    }\n}\n\n\nexport const ListHackers = () => {\n    return () => {\n        fetch(\"http://localhost:3002/hackers\", {\n            method: \"GET\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\":'Bearer ' + localStorage.getItem(\"hacker_token\")\n            }\n        })\n            .then((res) => res.json())\n            .then(res => {\n                console.log(res)\n                ConfigureStore.dispatch(list_hackers(res))\n            })\n            .catch((err) => console.log(err))\n    }\n}","import { Jumbotron, Container, Row, Button, Col } from 'reactstrap';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Modal, ModalBody, ModalFooter, Label, Input, FormGroup, FormFeedback, Form } from 'reactstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, CardTitle, CardText, } from 'reactstrap';\nimport classnames from 'classnames';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport GeneralCarousel from '../general/carasoule';\n\nimport { faCheckSquare, faCoffee, faSignInAlt, faUserPlus, faHatCowboySide, faUserShield, faUser, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\nimport { Component } from 'react';\nimport ModalFocusAfterClose from '../general/modal_component';\n\nimport { LoginUser, CreateUser } from '../../redux/action_creator';\n\nlibrary.add(faCheckSquare, faCoffee, faSignInAlt, faUserPlus, faHatCowboySide, faUser, faSignOutAlt);\nconst mapStateToProps = state => {\n    return {\n        login: state.state_reducer.login,\n        signup: state.state_reducer.user_created,\n        state: state\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch\n})\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            JSONdata: props.poductData,\n            open: false,\n            activeTab: 1,\n            login_email: \"\",\n            login_password: \"\",\n            name: '',\n            email: '',\n            password: '',\n            confirm_password: '',\n            location: '',\n            password_match: true,\n            invalid_form: false,\n            invalid_email: false\n\n        }\n        this.onLogin = this.onLogin.bind(this)\n        this.toggle = this.toggle.bind(this)\n        this.toggleTab = this.toggleTab.bind(this)\n        this.openModal = this.openModal.bind(this)\n        this.onSignup = this.onSignup.bind(this)\n        this.checkPassword = this.checkPassword.bind(this)\n        this.validateForm = this.validateForm.bind(this)\n        this.onLogout = this.onLogout.bind(this)\n    }\n\n\n    componentDidUpdate() {\n        if (this.props && (this.props.login || this.props.user_created))\n            this.props.history.push(\"home\", {\n\n            });\n    }\n\n    checkPassword(password, confirm_password) {\n        if ( this.state.confirm_password !==\"\" && this.state.confirm_password == this.state.password) {\n            this.setState({ password_match: true })\n            return true;\n\n        }\n\n        else {\n            this.setState({ password_match: false })\n            return false\n        }\n\n    }\n    validateForm() {\n        if (this.state.email !== \"\" && this.state.email) {\n            (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.state.email)) ? this.setState({ invalid_email: false }) : this.setState({ invalid_email: true })\n            this.setState({ invalid_form: false })\n            return true\n        }\n        else {\n            this.setState({ invalid_form: true })\n            return false\n\n        }\n\n\n    }\n    toggle() {\n        this.setState({\n            open: false\n        })\n    }\n    toggleTab = tab => {\n        if (this.state.activeTab !== tab)\n            this.setState({ activeTab: tab })\n    }\n\n    onChange(value, field) {\n        const key = field;\n        this.setState({ [field]: value })\n    }\n\n\n    onSignup() {\n        const sign_up = {}\n        if (this.validateForm() && this.checkPassword(this.state.password, this.state.confirm_password)) {\n            sign_up['username'] = this.state.email;\n            sign_up['password'] = this.state.password;\n            sign_up['location'] = this.state.location;\n            sign_up['name'] = this.state.name;\n\n            this.props.dispatch(CreateUser(sign_up));\n        }\n\n    }\nonLogout(){\n    localStorage.setItem(\"hacker_token\",\"\")\n    this.props.history.push(\"\", {\n\n    });\n}\n    openModal(id) {\n        this.setState({ open: true })\n        this.toggleTab(id)\n    }\n    onLogin() {\n        this.props.dispatch(LoginUser({ username: this.state.email, password: this.state.password }));\n    }\n\n    render() {\n        return (\n\n            <div className=\"\">\n                <Jumbotron fluid>\n                    <Container fluid>\n                        <Row>\n                            <Col>\n                            </Col>\n                            <Col></Col>\n                            <Col>\n                                <Button color=\"primary\" className={this.props.login ? 'hidden' : ''} onClick={() => this.openModal(\"1\")} size=\"lg\" active on >Login <FontAwesomeIcon icon=\"sign-in-alt\" /></Button>{' '}\n                                <Button outline color=\"primary\" className={this.props.login ? 'hidden' : ''} size=\"lg\" onClick={() => this.openModal(\"2\")} >Sing Up <FontAwesomeIcon icon=\"user-plus\" /></Button>\n                                <Button outline color=\"primary\" className={!this.props.login ? 'hidden' : ''} size=\"lg\"  >My Account <FontAwesomeIcon icon=\"user\" /></Button>{' '}\n                                <Button outline color=\"danger\" className={!this.props.login ? 'hidden' : ''} size=\"lg\"  onClick={this.onLogout} >Logout <FontAwesomeIcon icon=\"sign-out-alt\" /> </Button>\n                            </Col>\n                        </Row>\n                        <h1 className=\"display-3\"> <FontAwesomeIcon icon=\"hat-cowboy-side\" /></h1>\n                        <h1 className=\"display-1\">HACKER</h1> <h3 className=\"display-4\"> Ranking System</h3>\n\n                    </Container>\n                </Jumbotron>\n                <GeneralCarousel />\n                <div>\n                    <Modal isOpen={this.state.open}>\n                        <ModalBody>\n                            <div>\n                                <Nav tabs>\n                                    <NavItem>\n                                        <NavLink\n                                            className={classnames({ active: this.state.activeTab === '1' })}\n                                            onClick={() => { this.toggleTab('1'); }}\n                                        >\n                                            Login\n                                         </NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink\n                                            className={classnames({ active: this.state.activeTab === '2' })}\n                                            onClick={() => { this.toggleTab('2'); }}\n                                        >\n                                            Sign Up\n                                      </NavLink>\n                                    </NavItem>\n                                </Nav>\n                                <TabContent activeTab={this.state.activeTab}>\n                                    <TabPane tabId=\"1\">\n                                        <Form inline>\n                                            <Card body>\n\n                                                <Row>\n                                                    <FormGroup >\n                                                        <Col lg=\"4\">\n                                                            <Label for=\"exampleEmail\" >Email</Label>\n                                                        </Col>\n                                                        <Col></Col>\n                                                        <Col lg=\"8\">\n                                                            <Input value={this.state.email} onChange={(e) => { this.onChange(e.target.value, \"email\") }} type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"something@idk.cool\" />\n                                                        </Col>\n                                                    </FormGroup>\n\n                                                    <FormGroup >\n                                                        <Col lg=\"4\">\n                                                            <Label for=\"examplePassword\">Password</Label>\n                                                        </Col>\n                                                        <Col></Col>\n                                                        <Col lg=\"8\">\n                                                            <Input value={this.state.password} onChange={(e) => { this.onChange(e.target.value, \"password\") }} type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"don't tell!\" />\n                                                        </Col>\n                                                    </FormGroup>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                    </Col>\n                                                    <Col>\n                                                        <Button onClick={this.onLogin} color=\"primary\">Login</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        </Form>\n\n\n\n                                    </TabPane>\n                                    <TabPane tabId=\"2\">\n                                        <Card body>\n                                            <Form inline>\n\n                                                <Row>\n                                                    <FormGroup >\n                                                        <Col lg=\"4\">\n                                                            <Label for=\"name\" >Name</Label>\n                                                        </Col>\n                                                        <Col></Col>\n                                                        <Col sm=\"8\">\n                                                            <Input name=\"name\"  value={this.state.name} onChange={(e) => { this.onChange(e.target.value, \"name\") }} id=\"name\" placeholder=\"Jhon\" />\n                                                        </Col>\n                                                    </FormGroup>\n\n                                                    <FormGroup >\n                                                        <Col lg=\"4\">\n                                                            <Label for=\"exampleEmail\" >Email</Label>\n                                                        </Col>\n                                                        <Col></Col>\n\n                                                        <Col lg=\"8\">\n                                                            <Input invalid={this.state.invalid_form} required={true} type=\"email\" value={this.state.email} email onChange={(e) => { this.onChange(e.target.value, \"email\") }} name=\"email\" id=\"email\" placeholder=\"jhon@abc.com\" />\n                                                            <FormFeedback invalid>This field is required!</FormFeedback>\n                                                            {\n                                                                this.state.invalid_email ? <div><FormFeedback invalid>Please enter valid email!</FormFeedback></div> : <div><FormFeedback invalid>This field is required!</FormFeedback></div>\n                                                            }\n\n                                                        </Col>\n                                                    </FormGroup>\n                                                    <FormGroup >\n                                                        <Col lg=\"4\" >\n                                                            <Label for=\"password\">Password</Label>\n                                                        </Col>\n                                                        <Col></Col>\n\n                                                        <Col lg=\"8\">\n                                                            <Input type=\"password\" value={this.state.password} onChange={(e) => { this.onChange(e.target.value, \"password\") }} name=\"password\" id=\"password\" placeholder=\"Password\" />\n                                                        </Col>\n                                                    </FormGroup>\n                                                    <FormGroup >\n                                                        <Col lg=\"4\">\n                                                            <Label for=\"confirm_password\">Confirm</Label>\n                                                        </Col>\n                                                        <Col></Col>\n\n                                                        <Col lg=\"8\">\n                                                            <Input type=\"password\" invalid={!this.state.password_match} value={this.state.confirm_password} onChange={(e) => { this.onChange(e.target.value, \"confirm_password\") }} name=\"confirm_password\" id=\"confirm_password\" placeholder=\"Confirm Password\" />\n                                                            <FormFeedback invalid>Sweet! that name is available</FormFeedback>\n\n                                                        </Col>\n                                                    </FormGroup>\n                                                    <FormGroup >\n                                                        <Col lg=\"4\">\n                                                            <Label for=\"name\" >Location</Label>\n                                                        </Col>\n                                                        <Col></Col>\n\n                                                        <Col lg=\"8\">\n                                                            <Input value={this.state.location} onChange={(e) => { this.onChange(e.target.value, \"location\") }} type=\"string\" name=\"location\" id=\"location\" />\n                                                            \n                                                        </Col>\n                                                    </FormGroup>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Button onClick={this.onSignup} color=\"primary\">Sing Up</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Form>\n                                        </Card>\n\n                                    </TabPane>\n                                </TabContent>\n                            </div>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"danger\" onClick={this.toggle}>Close</Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Landing));\n\n\n\n","\n\nimport React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { DataGrid } from '@material-ui/data-grid';\n\n\nimport { Pagination, PaginationItem, PaginationLink, Table } from 'reactstrap';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from 'react-router';\n\nconst mapStateToProps = state => {\n    return {\n        payload: state.state_reducer.hackers_list\n\n    }\n}\n\n\nconst columns = [\n    { field: '_id', headerName: 'ID', width: 70 },\n    { field: 'userId', headerName: 'First name', width: 130 },\n    { field: 'location', headerName: 'Last name', width: 130 },\n    { field: 'name', headerName: 'Last name', width: 130 },\n    { field: 'comptetive_percentile', headerName: 'Last name', width: 130 }\n\n];\n\nconst rows = [\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\nclass GeneralTable extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.dataSet = [...Array(Math.ceil(500 + Math.random() * 500))].map(\n            (a, i) => \"(<div>kmkm</div>)\" + (i + 1)\n        );\n        this.pageSize = 10;\n        this.pagesCount = Math.ceil(this.props.payload.length / this.pageSize);\n        this.viewProfile = this.viewProfile.bind(this)\n        this.state = {\n            currentPage: 0\n        };\n        this.getNext = this.getNext.bind(this)\n    }\n\n    getNext() {\n    }\n\n    handleClick(e, index) {\n\n        e.preventDefault();\n\n        this.setState({\n            currentPage: index\n        });\n\n    }\n\n    viewProfile(data) {\n        console.log(data)\n        this.props.history.push({ pathname: \"/profile/\" + data.userId, payload: data });\n    }\n\n    render() {\n\n        const { currentPage } = this.state;\n        this.pagesCount = Math.ceil(this.props.payload.length / this.pageSize);\n        return (\n\n            <React.Fragment>\n\n                <div className=\"pagination-wrapper\">\n\n                    <Pagination aria-label=\"Page navigation example\">\n\n                        <PaginationItem disabled={currentPage <= 0}>\n\n                            <PaginationLink\n                                onClick={e => this.handleClick(e, currentPage - 1)}\n                                previous\n                                href=\"#\"\n                            />\n\n                        </PaginationItem>\n\n                        {[...Array(this.pagesCount)].map((page, i) =>\n                            <PaginationItem active={i === currentPage} key={i}>\n                                <PaginationLink onClick={e => this.handleClick(e, i)} href=\"#\">\n                                    {i + 1}\n                                </PaginationLink>\n                            </PaginationItem>\n                        )}\n\n                        <PaginationItem disabled={currentPage >= this.pagesCount - 1}>\n\n                            <PaginationLink\n                                onClick={e => this.handleClick(e, currentPage + 1)}\n                                next\n                                href=\"#\"\n                            />\n\n                        </PaginationItem>\n\n                    </Pagination>\n\n                </div>\n                <Table >\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Percentile C++</th>\n                            <th>Percentile Python</th>\n                            <th>Percentile Java</th>\n                            <th>Percentile avascript</th>\n\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n\n                            this.props.payload.slice(\n                                currentPage * this.pageSize,\n                                (currentPage + 1) * this.pageSize)\n                                .map((data, i) => {\n                                    if ((currentPage + 1) == this.pagesCount) {\n                                        this.getNext();\n\n                                    }\n                                    return (<tr key={data.userId}>\n                                        <th scope=\"row\">{i + 1}</th>\n\n                                        <td  ><Button onClick={() => this.viewProfile(data)}  >{data.name}</Button></td>\n                                        <td onClick={this.viewProfile}>{data.location}</td>\n                                        <td onClick={this.viewProfile}>{data.comptetive_percentile.cplusplus}</td>\n                                        <td onClick={this.viewProfile}>{data.comptetive_percentile.java}</td>\n                                        <td onClick={this.viewProfile}>{data.comptetive_percentile.python}</td>\n                                        <td onClick={this.viewProfile}>{data.comptetive_percentile.javascript}</td>\n                                        <th scope=\"row\"><Button onClick={() => this.viewProfile(data)} >View Profile</Button></th>\n\n                                    </tr>\n                                    )\n\n                                }\n\n                                )\n                        }\n\n                    </tbody>\n\n                </Table>\n\n\n            </React.Fragment>\n\n        );\n\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(GeneralTable));","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { connect } from 'react-redux';\nimport { DataGrid, gridColumnsTotalWidthSelector } from '@material-ui/data-grid';\nimport GeneralTable from '../general/general_components'\n//import { Chart } from 'react-charts'\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\n\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\nimport { ListHackers } from '../../redux/action_creator';\n\n\nconst mapStateToProps = state => {\n  return {\n    payload: state.state_reducer.hackers_list,\n    graph_data:state.state_reducer.graph_data\n  }\n\n}\nconst  options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          callback: function(label, index, labels) {\n            if (label > 75) {\n              return \"Expert: \" + label;\n            } else if (label > 50) {\n              return \"Advanced: \" + label;\n            } else if (label > 25) {\n              return \"Intermediate: \" + label;\n            } else {\n              return \"Beginner: \" + label;\n            }\n            //                         return '$' + label;\n          }\n        }\n      }\n    ]\n  }\n};\nconst data =[\n  {\n    label: 'Series 1',\n\n    data: [[0, 1], [1, 2.5], [2, 4], [3, 2], [4, 7]]\n  }\n  \n]\nconst columns = [\n  { field: '_id', headerName: 'ID', width: 70 },\n  { field: 'userId', headerName: 'First name', width: 130 },\n  { field: 'location', headerName: '1 name', width: 130 },\n  { field: 'name', headerName: 'Last name', width: 130 },\n  { field: 'password', headerName: ' name', width: 130 }\n\n];\nconst series = \n  () => ({\n    type: 'bar',\n    series: 10\n  })\n  \nconst axes = [\n  { primary: true, type: 'linear', position: 'bottom',label:\"MAYANK\" },\n  { type: 'linear', position: 'left' }\n]\nclass Home extends React.Component {\n\n  constructor(props) {\n    props.dispatch(ListHackers())\n\n    super(props);\n    this.state = {\n      payload: [],\n      graph_d:[]\n    }\n    this.newRef = React.createRef(); \n\n\n  }\n  componentWillReceiveProps() {\n    var da= []\n\n    this.setState({ payload: this.props.payload ,graph_d: this.props.graph_data })\n    for(var i= 5;this.props.payload.length  && i < 10;i++){\n      da.push([(parseInt(this.props.payload[i].userId) / 2)*1,(parseInt(this.props.payload[i].name) / 2)*1])\n   }\n\n   if(this.props.payload.length > 0)\n   data.push({label:'Series 2',data:da})\n\n  }\n\n  componentWillUpdate() {\n\n  }\nstatic pr = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(label, index, labels) {\n              if (label > 75) {\n                return \"Expert: \" + label;\n              } else if (label > 50) {\n                return \"Advanced: \" + label;\n              } else if (label > 25) {\n                return \"Intermediate: \" + label;\n              } else {\n                return \"Beginner: \" + label;\n              }\n            }\n          }\n        }\n      ]\n    }\n  }}\n  render() {\n    return (\n      <div>\n\n        <Card>\n          <CardBody>\n            <CardTitle tag=\"h5\">Card title</CardTitle>\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\n            <GeneralTable  props={this.props.payload} />\n            <div  style={{\n        width: '400px',\n        height: '300px'\n      }}\n>\n\n</div>\n                <Button>Table</Button>{' '}\n            <Button>Graph</Button>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n};\n\n\n\n\nexport default connect(mapStateToProps)(Home);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Bar, } from \"react-chartjs-2\";\n\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nimport { ListHackers } from '../../redux/action_creator';\nimport { withRouter } from 'react-router';\n\n\nconst mapStateToProps = state => {\n    return {\n        payload: state.state_reducer.hackers_list,\n    }\n\n}\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    callback: function (label, index, labels) {\n                        if (label > 75) {\n                            return \"Expert: \" + label;\n                        } else if (label > 50) {\n                            return \"Advanced: \" + label;\n                        } else if (label > 25) {\n                            return \"Intermediate: \" + label;\n                        } else {\n                            return \"Beginner: \" + label;\n                        }\n                    }\n                }\n            }\n        ]\n    }\n};\nconst data = [\n    {\n        label: 'Series 1',\n\n        data: [[0, 1], [1, 2.5], [2, 4], [3, 2], [4, 7]]\n    }\n\n]\nconst columns = [\n    { field: '_id', headerName: 'ID', width: 70 },\n    { field: 'userId', headerName: 'First name', width: 130 },\n    { field: 'location', headerName: '1 name', width: 130 },\n    { field: 'name', headerName: 'Last name', width: 130 },\n    { field: 'password', headerName: ' name', width: 130 }\n\n];\nconst series =\n    () => ({\n        type: 'bar',\n        series: 10\n    })\nconst axes = [\n    { primary: true, type: 'linear', position: 'bottom', label: \"MAYANK\" },\n    { type: 'linear', position: 'left' }\n]\nclass ProfileComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n        var dat = props.location.payload\n        var graph_d = [];\n\n        dat.comptetive_percentile ?\n            graph_d.push(dat.comptetive_percentile[0]['cplusplus']) : graph_d.push(0)\n\n        dat.comptetive_percentile ?\n            graph_d.push(dat.comptetive_percentile[1]['java']) : graph_d.push(0)\n\n\n        dat.comptetive_percentile ?\n            graph_d.push(dat.comptetive_percentile[2]['python']) : graph_d.push(0)\n\n\n\n\n\n        props.dispatch(ListHackers())\n\n        this.state = {\n            payload: [],\n            graph_d: graph_d,\n            user: dat\n        }\n        this.newRef = React.createRef();\n\n\n    }\n    render() {\n        return (\n            <div>\n\n                <Card>\n                    <CardBody>\n                        <CardTitle tag=\"h5\">{this.state.user.name}</CardTitle>\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{this.state.user.location}</CardSubtitle>\n                        <div style={{\n                            width: '400px',\n                            height: '300px'\n                        }}\n                        >\n                            <Bar data={{\n                                labels: [\"C++\", \"JAVA\", \"Python\"],\n                                datasets: [\n                                    {\n                                        data: this.state.graph_d,\n                                        backgroundColor: [\n                                            \"rgba(255, 99, 132, 0.6)\",\n                                            \"rgba(54, 162, 235, 0.6)\",\n                                            \"rgba(255, 206, 86, 0.6)\",\n                                        ]\n                                    }\n\n                                ]\n                            }} />\n\n                        </div>\n                        <Button>Table</Button>{' '}\n                        <Button>Graph</Button>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n};\n\n\n\n\nexport default withRouter(connect(mapStateToProps)(ProfileComponent));","\r\nimport Landing from '../components/landing/landing_component'\r\nimport Home from '../components/home/home_component';\r\n\r\nimport data from '../data.json';\r\nimport ACTIONS from './redux_const';\r\nimport ProfileComponent from '../components/profile/profile_component';\r\n\r\nconst initialState = {\r\n    landing: Landing,\r\n    home: Home,\r\n    profile_component:ProfileComponent,\r\n    login: false,\r\n    user_created: false,\r\n    hackers_list: [],\r\n    graph_data: [\r\n        {}\r\n     ]\r\n\r\n};\r\n\r\n\r\nfunction TestReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS.LOGIN:\r\n            return Object.assign({}, state, {\r\n                login: true\r\n            });\r\n\r\n        case ACTIONS.CREATE_USER:\r\n            return Object.assign({}, state, {\r\n                user_created: true,\r\n                login: true\r\n            })\r\n\r\n        case ACTIONS.LIST_HACKERS:\r\n            return Object.assign({}, state, {\r\n                hackers_list: action.payload,\r\n                \r\n            })\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default { TestReducer: TestReducer, state: initialState }","import {createStore,applyMiddleware,combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport Obje from './reducer';\r\n\r\n\r\n\r\nconst Store = createStore(combineReducers({\r\n state_reducer:Obje.TestReducer\r\n}), Obje.initialState,\r\n    applyMiddleware(thunk));\r\n\r\nexport default Store;\r\n","import React,{Component} from 'react';\nimport data from  './data.json';\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport {configureStore} from './redux/configure.store';\nimport {BrowserRouter,Switch,Route,Redirect,withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n const mapStateToProps = state => {\n          return {\n            Landing: state.state_reducer.landing,\n            Home:state.state_reducer.home,\n            login:state.state_reducer.login,\n            Profile:state.state_reducer.profile_component\n          }\n  }\n\nclass  App extends Component {\n constructor(props){\n            super(props);\n\n            if(this.state && this.state.state_reducer.login)\n                  this.props.history.push(\"/home\", {});\n\n }\n\n  render(){\n\n            return (\n                    <div className=\"App\">\n                      \n                            <BrowserRouter>\n                                  <Switch>\n                                      <Route exact path=\"/\" component={this.props.Landing} />\n                                      <Route  path=\"/home\" component={this.props.Home}/>\n                                      <Route exact path=\"/profile/:user_id\" component={this.props.Profile}/>\n                                  </Switch>\n                            </BrowserRouter>\n                      \n                    </div>\n            );\n  }\n}\n\nexport default (connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport Store from './redux/configure.store';\n\n\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}